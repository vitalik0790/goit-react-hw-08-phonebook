{"version":3,"sources":["redux/auth/authReducer.js","redux/auth/authSelectors.js","redux/contacts/contactsActions.js","redux/auth/authOperations.js","redux/auth/authActions.js","components/userMenu/UserMenu.module.css","components/navigation/Navigation.js","components/userMenu/UserMenu.js","components/authNav/AuthNav.js","components/appBar/AppBar.js","components/layout/Layout.js","routes.js","components/routes/PrivateRoute.js","components/routes/PublicRoute.js","components/App.js","redux/contacts/contactsReducers.js","redux/store.js","index.js"],"names":["initialUserState","name","email","user","createReducer","authActions","registerSuccess","_","payload","loginSuccess","getCurrentUserSuccess","logoutSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","combineReducers","isAuthenticated","state","auth","getUserName","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","onHandleFilter","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","registerRequest","post","then","response","console","log","data","catch","logOut","logoutRequest","logIn","loginRequest","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","module","exports","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","onLogout","authOperations","src","alt","width","className","s","insert","type","onClick","AuthNav","header","justifyContent","borderBottom","marginLeft","Layout","children","path","label","component","lazy","private","restricted","Component","routeProps","render","props","App","this","onGetCurrentUser","fallback","routes","map","route","contactList","contactsActions","action","filter","contact","id","toString","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducers","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.40808575.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: (_, { payload }) => payload,\r\n    [authActions.loginError]: (_, { payload }) => payload,\r\n    [authActions.logoutError]: (_, { payload }) => payload,\r\n    [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    error,\r\n});","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n// eslint-disable-next-line\r\nexport default { isAuthenticated, getUserName };","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\nconst onHandleFilter = createAction(\"contacts/handleFilter\");\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    onHandleFilter,\r\n    // addToLocalStorage,\r\n\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError,\r\n}\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//     type: actionTypes.ADD,\r\n//     payload: {\r\n//         contact: {\r\n//             id: uuidv4(),\r\n//             name,\r\n//             number,\r\n//         }\r\n//     }\r\n// })\r\n\r\n\r\n// const deleteContact = (id) => ({\r\n//     type: actionTypes.REMOVE,\r\n//     payload: {\r\n//         id,\r\n//     }\r\n// })\r\n\r\n// const onHandleFilter = (filter) => ({\r\n//     type: actionTypes.VALUE,\r\n//     payload: {\r\n//         filter,\r\n//     }\r\n// })\r\n\r\n","import axios from 'axios';\r\nimport authActions from './authActions'\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    axios\r\n        .post('/users/signup', credentials)\r\n        .then(response => {\r\n            console.log(response)\r\n            token.set(response.data.token);\r\n            dispatch(authActions.registerSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    axios\r\n        .post('/users/login', credentials)\r\n        .then(response => {\r\n            token.set(response.data.token);\r\n            dispatch(authActions.loginSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    axios\r\n        .get('/users/current')\r\n        .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n        .catch(error => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    axios\r\n        .post('/users/logout')\r\n        .then(() => {\r\n            token.unset();\r\n            dispatch(authActions.logoutSuccess());\r\n        })\r\n        .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\n// eslint-disable-next-line\r\nexport default { register, logOut, logIn, getCurrentUser };","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n// eslint-disable-next-line\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"insert\":\"UserMenu_insert__1X0FA\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst styles = {\r\n    link: {\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        padding: 12,\r\n        fontWeight: 700,\r\n        color: '#04CFDD',\r\n    },\r\n    activeLink: {\r\n        color: '#E84A5F',\r\n    },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n    <nav>\r\n        <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n            HOME\r\n        </NavLink>\r\n\r\n        {isAuthenticated && (\r\n            <NavLink\r\n                to=\"/contacts\"\r\n                exact\r\n                style={styles.link}\r\n                activeStyle={styles.activeLink}\r\n            >\r\n                CONTACTS\r\n            </NavLink>\r\n        )}\r\n    </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations, authSelectors } from '../../redux/auth';\r\nimport s from './UserMenu.module.css'\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        marginRight: 4,\r\n    },\r\n    name: {\r\n        fontWeight: 700,\r\n        marginRight: 12,\r\n        color: \"aqua\",\r\n    },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n    <div style={styles.container}>\r\n        <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n        <span style={styles.name}>Welcome, {name}</span>\r\n        <button className={s.insert} type=\"button\" onClick={onLogout}>\r\n            Logout\r\n    </button>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    name: authSelectors.getUserName(state),\r\n    avatar:\r\n        'https://i.ibb.co/QKh1Njr/pngkey-com-funny-png-111267.png',\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n    UserMenu,\r\n);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n    link: {\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        padding: 12,\r\n        fontWeight: 700,\r\n        color: '#04CFDD',\r\n    },\r\n    activeLink: {\r\n        color: '#E84A5F',\r\n    },\r\n};\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink\r\n            to=\"/register\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n        >\r\n            REGISTER\r\n    </NavLink>\r\n        <NavLink\r\n            to=\"/login\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n        >\r\n            LOGIN\r\n    </NavLink>\r\n    </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../navigation/Navigation';\r\nimport UserMenu from '../userMenu/UserMenu';\r\nimport AuthNav from '../authNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst styles = {\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderBottom: '1px solid #2A363B',\r\n    },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n    <header style={styles.header}>\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","\r\nimport React from 'react';\r\nimport AppBar from '../appBar/AppBar';\r\n\r\nconst styles = {\r\n    container: {\r\n        width: '80vw',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        padding: '0 24px 34px',\r\n    },\r\n};\r\n\r\nconst Layout = ({ children }) => (\r\n    <div style={styles.container}>\r\n        <AppBar />\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default Layout;","import { lazy } from 'react';\r\n\r\n// eslint-disable-next-line\r\nexport default [\r\n    {\r\n        path: '/',\r\n        label: 'Home',\r\n        exact: true,\r\n        component: lazy(() => import('./views/HomeView')),\r\n        private: false,\r\n        restricted: false,\r\n    },\r\n    {\r\n        path: '/register',\r\n        label: 'Register',\r\n        exact: true,\r\n        component: lazy(() => import('./views/RegisterView')),\r\n        private: false,\r\n        restricted: true,\r\n    },\r\n    {\r\n        path: '/login',\r\n        label: 'Login',\r\n        exact: true,\r\n        component: lazy(() => import('./views/LoginView')),\r\n        private: false,\r\n        restricted: true,\r\n    },\r\n    {\r\n        path: '/contacts',\r\n        label: 'Contacts',\r\n        exact: true,\r\n        component: lazy(() => import('./views/ContactsView')),\r\n        private: true,\r\n        restricted: false,\r\n    },\r\n];","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /tasks\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated && routeProps.restricted ? (\r\n                <Redirect to=\"/contacts\" />\r\n            ) : (\r\n                    <Component {...props} />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Layout from './layout/Layout';\r\nimport routes from '../routes';\r\nimport authOperations from '../redux/auth/authOperations';\r\nimport './App.css';\r\nimport PrivateRoute from './routes/PrivateRoute';\r\nimport PublicRoute from './routes/PublicRoute';\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.onGetCurrentUser();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Layout>\r\n                    <Suspense fallback={<h1>Loading...</h1>}>\r\n                        <Switch>\r\n                            {routes.map(route =>\r\n                                route.private ? (\r\n                                    <PrivateRoute key={route.label} {...route} />\r\n                                ) : (\r\n                                        <PublicRoute key={route.label} {...route} />\r\n                                    ),\r\n                            )}\r\n                        </Switch>\r\n                    </Suspense>\r\n                </Layout>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, {\r\n    onGetCurrentUser: authOperations.getCurrentUser,\r\n})(App);","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst addContact = (state, action) => {\r\n    return [...state, action.payload];\r\n};\r\nconst removeContact = (state, action) => {\r\n    return state.filter(contact => contact.id.toString() !== action.payload);\r\n};\r\n\r\nconst contactList = createReducer([], {\r\n    [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n    [contactsActions.addContactSuccess]: addContact,\r\n    [contactsActions.removeContactSuccess]: removeContact,\r\n    // [contactsActions.addToLocalStorage]: (_, action) => action.payload,\r\n})\r\n\r\nconst filter = createReducer(\"\", {\r\n    [contactsActions.onHandleFilter]: (_, action) => action.payload,\r\n})\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    contactList,\r\n    filter,\r\n})\r\n\r\n\r\n\r\n// const contactList = (state = [], { type, payload }) => {\r\n    //     switch (type) {\r\n        //         case contactsActions.addContact.type:\r\n        //             return [...state, payload.contact];\r\n\r\n        //         case contactsActions.deleteContact.type:\r\n        //             return state.filter(contact => contact.id !== payload)\r\n\r\n        //         default:\r\n        //             return state;\r\n        //     }\r\n        // };\r\n\r\n\r\n        // const filter = (state = \"\", { type, payload }) => {\r\n        //     switch (type) {\r\n        //         case contactsActions.onHandleFilter.type:\r\n        //             return payload;\r\n\r\n        //         default:\r\n        //             return state;\r\n        //     }\r\n        // };","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducers from '../redux/contacts/contactsReducers';\r\nimport { authReducer } from '../redux/auth';\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducers,\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n    },\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './components/App';\r\nimport { store, persistor } from './redux/store';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
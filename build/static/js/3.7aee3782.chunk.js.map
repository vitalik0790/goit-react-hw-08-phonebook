{"version":3,"sources":["components/phoneBook/notification/Notification.module.css","components/phoneBook/empty/Empty.module.css","components/phoneBook/contactForm/ContactForm.module.css","components/phoneBook/contactList/ContactList.module.css","components/phoneBook/contactFilter/ContactFilter.module.css","components/phoneBook/PhoneBook.module.css","redux/contacts/contactsOperations.js","components/phoneBook/notification/Notification.js","components/phoneBook/empty/Empty.js","redux/contacts/contactsSelectors.js","components/phoneBook/contactForm/ContactForm.js","components/phoneBook/contactList/ContactList.js","components/phoneBook/contactFilter/ContactFilter.js","components/phoneBook/PhoneBook.js","views/ContactsView.js"],"names":["module","exports","addContact","name","number","dispatch","contactsActions","addContactRequest","axios","post","then","response","addContactSuccess","data","catch","error","addContactError","fetchContacts","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","removeContact","id","removeContactRequest","delete","removeContactSuccess","removeContactError","Notification","className","Styles","NotificationWrapper","Empty","getContacts","state","contacts","contactList","getFilterValue","filter","getVisibleContacts","createSelector","contact","toLowerCase","includes","ContactForm","newContact","showAlert","showEmpty","handleChange","e","target","setState","value","handleSubmit","preventDefault","props","some","setTimeout","this","s","wrapper","onSubmit","form","label","mail","type","onChange","password","insert","CSSTransition","in","timeout","classNames","unmountOnExit","Component","mapDispatchToProps","contactsOperations","connect","contactsSelectors","deleteContact","onHandleDelete","dataset","title","TransitionGroup","component","list","map","listItem","button","data-id","onClick","onHandleFilter","inputName","PhoneBook","onFetchContacts","appear","ContactsView"],"mappings":"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","file":"static/js/3.7aee3782.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationWrapper\":\"Notification_NotificationWrapper__c22rV\",\"appear\":\"Notification_appear__22q5B\",\"appearActive\":\"Notification_appearActive__DjHuR\",\"exit\":\"Notification_exit__1ZG-a\",\"exitActive\":\"Notification_exitActive__TXcYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationWrapper\":\"Empty_NotificationWrapper__OziBY\",\"appear\":\"Empty_appear__OSslC\",\"appearActive\":\"Empty_appearActive__1ZMqq\",\"exit\":\"Empty_exit__2-3Wq\",\"exitActive\":\"Empty_exitActive__1HbcN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__2eKKN\",\"title\":\"ContactForm_title__zibAa\",\"form\":\"ContactForm_form__3BYMH\",\"mail\":\"ContactForm_mail__1SOKE\",\"password\":\"ContactForm_password__1jGN1\",\"name\":\"ContactForm_name__3gJaf\",\"insert\":\"ContactForm_insert__32_B8\",\"label\":\"ContactForm_label__S4N43\",\"input\":\"ContactForm_input__2IP5m\",\"enter\":\"ContactForm_enter__3CDQ0\",\"enterActive\":\"ContactForm_enterActive__3-kVa\",\"exit\":\"ContactForm_exit__2VvKP\",\"exitActive\":\"ContactForm_exitActive__2eTKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactList_wrapper__Dof9I\",\"list\":\"ContactList_list__3BxLF\",\"listItem\":\"ContactList_listItem__3UL2-\",\"title\":\"ContactList_title__gxUU_\",\"button\":\"ContactList_button__R4Yh-\",\"name\":\"ContactList_name__3_PLu\",\"enter\":\"ContactList_enter__4J4cY\",\"enterActive\":\"ContactList_enterActive__Y-l7D\",\"exit\":\"ContactList_exit__1I_Rt\",\"exitActive\":\"ContactList_exitActive__19Sc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactFilter_wrapper__2ner6\",\"inputName\":\"ContactFilter_inputName__rRxSB\",\"filter\":\"ContactFilter_filter__lzy3H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"PhoneBook_appear__3Nu4P\",\"appearActive\":\"PhoneBook_appearActive__pphbX\",\"title\":\"PhoneBook_title__5hhDS\",\"enter\":\"PhoneBook_enter__2Qz9A\",\"enterActive\":\"PhoneBook_enterActive__249rh\",\"exit\":\"PhoneBook_exit__IUbyl\",\"exitActive\":\"PhoneBook_exitActive__1ZFAp\"};","import contactsActions from './contactsActions';\r\nimport axios from 'axios';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n    dispatch(contactsActions.addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', { name, number })\r\n        .then(response => {\r\n            dispatch(contactsActions.addContactSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(contactsActions.addContactError(error)))\r\n}\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(contactsActions.fetchContactsRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(response => {\r\n            dispatch(contactsActions.fetchContactsSuccess(response.data));\r\n        })\r\n        .catch(error => dispatch(contactsActions.fetchContactsError(error)));\r\n}\r\n\r\nconst removeContact = id => dispatch => {\r\n    dispatch(contactsActions.removeContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(contactsActions.removeContactSuccess(id)))\r\n        .catch(error => dispatch(contactsActions.removeContactError(error)));\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    addContact,\r\n    fetchContacts,\r\n    removeContact,\r\n}","import React from 'react'\r\nimport Styles from './Notification.module.css'\r\n\r\nconst Notification = ({ name }) => {\r\n    return (\r\n        <div className={Styles.NotificationWrapper}>\r\n            {`${name} is already in Contacts`}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\nimport Styles from './Empty.module.css'\r\n\r\nconst Empty = () => {\r\n    return (\r\n        <div className={Styles.NotificationWrapper}>\r\n            {`ALL FIELDS MUST BE FILLED!`}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Empty;","import { createSelector } from '@reduxjs/toolkit'\r\n\r\nconst getContacts = state => state.contacts.contactList;\r\nconst getFilterValue = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector([getContacts, getFilterValue], (contactList, filter) => {\r\n    return contactList.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n});\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    getContacts,\r\n    getFilterValue,\r\n    getVisibleContacts,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import contactsActions from \"../../../redux/contacts/contactsActions\";\r\nimport contactsOperations from \"../../../redux/contacts/contactsOperations\";\r\nimport Notification from '../notification/Notification';\r\nimport Empty from '../empty/Empty';\r\nimport contactsSelectors from '../../../redux/contacts/contactsSelectors';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        newContact: null,\r\n        showAlert: false,\r\n        showEmpty: false,\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        this.setState({ [name]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (this.props.contacts.some(contact => contact.name === this.state.name)) {\r\n            this.setState({ newContact: this.state.name, showAlert: true })\r\n            setTimeout(() => {\r\n                this.setState({ showAlert: false })\r\n            }, 2500);\r\n\r\n        } else if (this.state.name === \"\" || this.state.contact === \"\") {\r\n            this.setState({ showEmpty: true })\r\n            setTimeout(() => {\r\n                this.setState({ showEmpty: false })\r\n            }, 2500);\r\n\r\n        } else {\r\n\r\n            this.props.addContact({ name: this.state.name, number: this.state.number })\r\n        }\r\n        this.setState({ name: '', number: \"\" })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { newContact, showAlert, showEmpty } = this.state;\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <form onSubmit={this.handleSubmit} className={s.form}>\r\n                    <label className={s.label}>\r\n                        Name\r\n                    <input className={s.mail} name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <label className={s.label}>\r\n                        Number\r\n                    <input className={s.password} name=\"number\" type=\"tel\" value={this.state.number} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <button className={s.insert} type=\"submit\">Add</button>\r\n                </form>\r\n                <CSSTransition in={showAlert} timeout={250} classNames={s} unmountOnExit>\r\n                    <Notification name={newContact} />\r\n                </CSSTransition>\r\n                <CSSTransition in={showEmpty} timeout={250} classNames={s} unmountOnExit>\r\n                    <Empty />\r\n                </CSSTransition>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: contactsSelectors.getContacts(state),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addContact: contactsOperations.addContact,\r\n    // addToLocalStorage: contactsActions.addToLocalStorage,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n// import contactsActions from '../../../redux/contacts/contactsActions';\r\nimport contactsOperations from '../../../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../../../redux/contacts/contactsSelectors';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n\r\n    const onHandleDelete = (e) => {\r\n        const id = e.target.dataset.id;\r\n        deleteContact(id);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h2 className={s.title}>CONTACTS</h2>\r\n            <TransitionGroup component='ul' className={s.list}>\r\n                {contacts.map(contact => {\r\n                    return (\r\n                        <CSSTransition\r\n                            key={contact.id}\r\n                            timeout={250}\r\n                            classNames={s}>\r\n                            <li className={s.listItem}>\r\n                                <div><span className={s.name}>{contact.name}</span>: <span>{contact.number}</span></div>\r\n                                <button className={s.button} type=\"button\" data-id={contact.id} onClick={onHandleDelete}>Delete</button>\r\n                            </li>\r\n                        </CSSTransition>)\r\n                })}\r\n            </TransitionGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n    deleteContact: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n    contacts: contactsSelectors.getVisibleContacts(state),\r\n\r\n});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteContact: (id) => {\r\n            dispatch(contactsOperations.removeContact(id));\r\n        },\r\n\r\n        // getFiltredContacts: ({ contacts, filter }) => {\r\n        //     dispatch(contactsActions.getFiltredContacts())\r\n        // }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport contactsActions from '../../../redux/contacts/contactsActions'\r\nimport contactsSelectors from '../../../redux/contacts/contactsSelectors';\r\nimport s from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ value, onHandleFilter }) => {\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <h3 className={s.inputName}>Find contacts by name</h3>\r\n            <input className={s.filter}\r\n                type=\"search\"\r\n                value={value}\r\n                onChange={(e) => onHandleFilter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    value: contactsSelectors.getFilterValue(state),\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    onHandleFilter: contactsActions.onHandleFilter,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from './contactForm/ContactForm'\r\nimport ContactList from './contactList/ContactList';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations'\r\nimport ContactFilter from './contactFilter/ContactFilter';\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from './PhoneBook.module.css';\r\n\r\n\r\n\r\n\r\nclass PhoneBook extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchContacts();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CSSTransition\r\n                    in={true}\r\n                    appear={true}\r\n                    timeout={500}\r\n                    classNames={s}\r\n                >\r\n                    <h1 className={s.title}>PHONEBOOK</h1>\r\n                </CSSTransition>\r\n\r\n                <ContactForm />\r\n                <ContactFilter />\r\n\r\n                <ContactList />\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onFetchContacts: contactsOperations.fetchContacts,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PhoneBook);\r\n","import React, { Component } from 'react';\r\nimport PhoneBook from '../components/phoneBook/PhoneBook';\r\n\r\nclass ContactsView extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <PhoneBook />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}